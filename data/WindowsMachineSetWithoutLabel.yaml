### Run following command to replace parameters
# infrastructureID=`oc get -o jsonpath='{.status.infrastructureName}{"\n"}' infrastructure cluster`
# region=`oc get -o jsonpath='{.status.platformStatus.aws.region}{"\n"}' infrastructure cluster`
# role=worker
# zone=us-east-2a
# windows_image_with_container_runtime_installed=ami-0c7a9c9d17f8a5b64
# sed -i -e "s/<infrastructureID>/$infrastructureID/g" -e "s/<role>/$role/g" -e "s/<zone>/$zone/g" -e "s/<region>/$region/g" -e "s/<windows_image_with_container_runtime_installed>/$windows_image_with_container_runtime_installed/g" WindowsMachineSetWithoutLabel.yaml
apiVersion: machine.openshift.io/v1beta1
kind: MachineSet
metadata:
  labels:
    machine.openshift.io/cluster-api-cluster: <infrastructureID>
  name: <infrastructureID>-windows-without-label-<role>-<zone>
  namespace: openshift-machine-api
spec:
  replicas: 1
  selector:
    matchLabels:
      machine.openshift.io/cluster-api-cluster: <infrastructureID>
      machine.openshift.io/cluster-api-machineset: <infrastructureID>-windows-without-label-<role>-<zone>
  template:
    metadata:
      labels:
        machine.openshift.io/cluster-api-cluster: <infrastructureID>
        machine.openshift.io/cluster-api-machine-role: <role>
        machine.openshift.io/cluster-api-machine-type: <role>
        machine.openshift.io/cluster-api-machineset: <infrastructureID>-windows-without-label-<role>-<zone>

    spec:
      metadata:
        labels:
          node-role.kubernetes.io/<role>: ""
      providerSpec:
        value:
          ami:
            id: <windows_image_with_container_runtime_installed>
          apiVersion: awsproviderconfig.openshift.io/v1beta1
          blockDevices:
            - ebs:
                iops: 0
                volumeSize: 120
                volumeType: gp2
          credentialsSecret:
            name: aws-cloud-credentials
          deviceIndex: 0
          iamInstanceProfile:
            id: <infrastructureID>-worker-profile
          instanceType: m5a.large
          kind: AWSMachineProviderConfig
          placement:
            availabilityZone: <zone>
            region: <region>
          securityGroups:
            - filters:
                - name: tag:Name
                  values:
                    - <infrastructureID>-worker-sg
          subnet:
            filters:
              - name: tag:Name
                values:
                  - <infrastructureID>-private-<zone>
          tags:
            - name: kubernetes.io/cluster/<infrastructureID>
              value: owned
          userDataSecret:
            name: windows-user-data